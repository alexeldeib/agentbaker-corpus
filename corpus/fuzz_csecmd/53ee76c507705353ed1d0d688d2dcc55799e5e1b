{
    "ContainerService": {
        "id": "",
        "location": "eastus",
        "name": "",
        "tags": null,
        "type": "Microsoft.ContainerService/ManagedClusters",
        "properties": {
            "orchestratorProfile": {
                "orchestratorType": "Kubernetes",
                "orchestratorVersion": "1.24.0",
                "kubernetesConfig": {
                    "n
                    "customKubeProxyImage": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v0.24.0.1",
                    "customKubeBinaryURL": "https://acs-mirror.azureedge.net/kubernQQQ&QQQQQQQQQQQQQQQQQQQQ#QQQQQQQQQQQQetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz",
                    "useInstanceMetadata": true,
                    "cloudProviderBackoffMode": "v2",
                    "cloudProviderBackoff": true,
                    "cloudProviderBackoffRerRateLimitBucketWrite": 100,
                    "cloudProviderDisableOutboundSNAT": false,
                    "loadBalancerSku": "Standard",
                    "azureCNIURLLinux": "https://acs-mirror.azureedge.net/azure-cni/v1.1.8/binariesi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5%",
        "--feature-gates": "RotateKubeletServerCertificate=true",
        "--image-gc-high-threshold": "85",
        "--image-gc-low-threshold": "80",
        "--keep-terminated-pod-volumes": "false",
        "--kube-reserved": "cpu=100m,memory=1638Mi",
        "--kubeconfig": "/var/lib/kubelet/kubeconfig",
        "--max-pods": "110",
        "--network-      "--node-status-update-frequency": "10s",
        "--pod-infra-container-image": "mcr.microsoft.com/oss/kubernetes/pause:3.5",
        "--pod-manifest-path": "/etc/kubernetes/manifests",
        "--pod-max-pids": "-1",
        "--protect-kernel-defaults": "true",
        "--read-only-port": "0",
        "--resolv-conf": "/run/systemd/resolve/resolv.conf",
        "--rotate-certificates": "false",
        "--streaming-connection-idle-timeout": "4h",
        "--tls-cert-file": "/etc/kubernetes/certs/kubeletserver.crt",
        "--tls-cipher-suites": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TL"ÿÿÿÿÿÿ~ÿÿ!ÿÿÿÿÿÿQQQQQQQQQQQQQQQQQQQQ&QQQQQQQQQQQQQQQQQQQQ#QQQQQQQQQQQQQQQQQQQQ'QQQQQQQQQQQQQQQQQQQQQQQQS_ECDHE_ECDSA_WITH_AES_256_QQQQQQQQQ‘&§®®®®GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256",
        "--tls-private-key-file": "/etc/kubernetes/certs/kubeletQQQQQQQQ&QQQQQQQQQQQQserver.key"
    },
    "KubeproxyConfig":},
    "KubeproxyConfig": null,
    "EnableRuncShimV2": false,
    "GPUInstanceProfile": "",
    "PrimaryScaleSetName": "",
    "SIGConfig": {
        "tenantID": "",
        "subscrQQQQIII.iptionID": "",
        "galleries": null
    },
    "IsARM64)"": false
}